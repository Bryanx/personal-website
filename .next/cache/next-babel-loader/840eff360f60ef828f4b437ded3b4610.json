{"ast":null,"code":"var _jsxFileName = \"/Users/bryan/Programming/personal-website/pages/[pageId].tsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { NotionRenderer } from \"react-notion\";\nimport Head from \"next/head\";\nimport Link from \"next/link\";\nimport fetch from \"node-fetch\";\nexport async function getServerSideProps(context) {\n  var _context$params;\n\n  const pageId = (_context$params = context.params) === null || _context$params === void 0 ? void 0 : _context$params.pageId;\n\n  if (!pageId) {\n    return;\n  }\n\n  const data = await fetch(`https://notion-api.splitbee.io/v1/page/${pageId}`).then(res => res.json());\n  return {\n    props: {\n      blockMap: data\n    }\n  };\n}\n\nconst NotionPage = ({\n  blockMap\n}) => {\n  var _blockMap$Object$keys;\n\n  if (!blockMap || Object.keys(blockMap).length === 0) {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, __jsx(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, \"No data found.\"), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, \" Make sure the pageId is valid.\"), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, \"Only public pages are supported in this example.\"));\n  }\n\n  const title = (_blockMap$Object$keys = blockMap[Object.keys(blockMap)[0]]) === null || _blockMap$Object$keys === void 0 ? void 0 : _blockMap$Object$keys.value.properties.title[0][0];\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    className: \"jsx-1298905063\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, title)), __jsx(NotionRenderer, {\n    blockMap: blockMap,\n    fullPage: true,\n    customBlockComponents: {\n      page: ({\n        blockValue,\n        renderComponent\n      }) => __jsx(Link, {\n        href: `/${blockValue.id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }\n      }, renderComponent())\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), __jsx(_JSXStyle, {\n    id: \"1298905063\",\n    __self: this\n  }, \"div .notion-code{box-sizing:border-box;}body{padding:0;margin:0;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9icnlhbi9Qcm9ncmFtbWluZy9wZXJzb25hbC13ZWJzaXRlL3BhZ2VzL1twYWdlSWRdLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFvRHlCLEFBR2lDLEFBR1osVUFDRCxTQUNYLEdBSkEiLCJmaWxlIjoiL1VzZXJzL2JyeWFuL1Byb2dyYW1taW5nL3BlcnNvbmFsLXdlYnNpdGUvcGFnZXMvW3BhZ2VJZF0udHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgTm90aW9uUmVuZGVyZXIsIEJsb2NrTWFwVHlwZSB9IGZyb20gXCJyZWFjdC1ub3Rpb25cIjtcbmltcG9ydCBIZWFkIGZyb20gXCJuZXh0L2hlYWRcIjtcbmltcG9ydCBMaW5rIGZyb20gXCJuZXh0L2xpbmtcIjtcbmltcG9ydCBmZXRjaCBmcm9tIFwibm9kZS1mZXRjaFwiO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0U2VydmVyU2lkZVByb3BzKGNvbnRleHQpIHtcbiAgY29uc3QgcGFnZUlkID0gY29udGV4dC5wYXJhbXM/LnBhZ2VJZDtcblxuICBpZiAoIXBhZ2VJZCkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGNvbnN0IGRhdGE6IEJsb2NrTWFwVHlwZSA9IGF3YWl0IGZldGNoKFxuICAgIGBodHRwczovL25vdGlvbi1hcGkuc3BsaXRiZWUuaW8vdjEvcGFnZS8ke3BhZ2VJZH1gXG4gICkudGhlbihyZXMgPT4gcmVzLmpzb24oKSk7XG5cbiAgcmV0dXJuIHtcbiAgICBwcm9wczoge1xuICAgICAgYmxvY2tNYXA6IGRhdGFcbiAgICB9XG4gIH07XG59XG5cbmNvbnN0IE5vdGlvblBhZ2UgPSAoeyBibG9ja01hcCB9KSA9PiB7XG4gIGlmICghYmxvY2tNYXAgfHwgT2JqZWN0LmtleXMoYmxvY2tNYXApLmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2PlxuICAgICAgICA8aDM+Tm8gZGF0YSBmb3VuZC48L2gzPlxuICAgICAgICA8ZGl2PiBNYWtlIHN1cmUgdGhlIHBhZ2VJZCBpcyB2YWxpZC48L2Rpdj5cbiAgICAgICAgPGRpdj5Pbmx5IHB1YmxpYyBwYWdlcyBhcmUgc3VwcG9ydGVkIGluIHRoaXMgZXhhbXBsZS48L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cblxuICBjb25zdCB0aXRsZSA9XG4gICAgYmxvY2tNYXBbT2JqZWN0LmtleXMoYmxvY2tNYXApWzBdXT8udmFsdWUucHJvcGVydGllcy50aXRsZVswXVswXTtcblxuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICA8SGVhZD5cbiAgICAgICAgPHRpdGxlPnt0aXRsZX08L3RpdGxlPlxuICAgICAgPC9IZWFkPlxuICAgICAgPE5vdGlvblJlbmRlcmVyXG4gICAgICAgIGJsb2NrTWFwPXtibG9ja01hcH1cbiAgICAgICAgZnVsbFBhZ2VcbiAgICAgICAgY3VzdG9tQmxvY2tDb21wb25lbnRzPXt7XG4gICAgICAgICAgcGFnZTogKHsgYmxvY2tWYWx1ZSwgcmVuZGVyQ29tcG9uZW50IH0pID0+IChcbiAgICAgICAgICAgIDxMaW5rIGhyZWY9e2AvJHtibG9ja1ZhbHVlLmlkfWB9PntyZW5kZXJDb21wb25lbnQoKX08L0xpbms+XG4gICAgICAgICAgKVxuICAgICAgICB9fVxuICAgICAgLz5cbiAgICAgIDxzdHlsZSBqc3ggZ2xvYmFsPntgXG4gICAgICAgIGRpdiA6Z2xvYmFsKC5ub3Rpb24tY29kZSkge1xuICAgICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgICAgIH1cbiAgICAgICAgYm9keSB7XG4gICAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIH1cbiAgICAgIGB9PC9zdHlsZT5cbiAgICA8Lz5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IE5vdGlvblBhZ2U7XG4iXX0= */\\n/*@ sourceURL=/Users/bryan/Programming/personal-website/pages/[pageId].tsx */\"));\n};\n\nexport default NotionPage;","map":{"version":3,"sources":["/Users/bryan/Programming/personal-website/pages/[pageId].tsx"],"names":["React","NotionRenderer","Head","Link","fetch","getServerSideProps","context","pageId","params","data","then","res","json","props","blockMap","NotionPage","Object","keys","length","title","value","properties","page","blockValue","renderComponent","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA6C,cAA7C;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AAEA,OAAO,eAAeC,kBAAf,CAAkCC,OAAlC,EAA2C;AAAA;;AAChD,QAAMC,MAAM,sBAAGD,OAAO,CAACE,MAAX,oDAAG,gBAAgBD,MAA/B;;AAEA,MAAI,CAACA,MAAL,EAAa;AACX;AACD;;AAED,QAAME,IAAkB,GAAG,MAAML,KAAK,CACnC,0CAAyCG,MAAO,EADb,CAAL,CAE/BG,IAF+B,CAE1BC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAFmB,CAAjC;AAIA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EAAEL;AADL;AADF,GAAP;AAKD;;AAED,MAAMM,UAAU,GAAG,CAAC;AAAED,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACnC,MAAI,CAACA,QAAD,IAAaE,MAAM,CAACC,IAAP,CAAYH,QAAZ,EAAsBI,MAAtB,KAAiC,CAAlD,EAAqD;AACnD,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DAHF,CADF;AAOD;;AAED,QAAMC,KAAK,4BACTL,QAAQ,CAACE,MAAM,CAACC,IAAP,CAAYH,QAAZ,EAAsB,CAAtB,CAAD,CADC,0DACT,sBAAoCM,KAApC,CAA0CC,UAA1C,CAAqDF,KAArD,CAA2D,CAA3D,EAA8D,CAA9D,CADF;AAGA,SACE,4BACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQA,KAAR,CADF,CADF,EAIE,MAAC,cAAD;AACE,IAAA,QAAQ,EAAEL,QADZ;AAEE,IAAA,QAAQ,MAFV;AAGE,IAAA,qBAAqB,EAAE;AACrBQ,MAAAA,IAAI,EAAE,CAAC;AAAEC,QAAAA,UAAF;AAAcC,QAAAA;AAAd,OAAD,KACJ,MAAC,IAAD;AAAM,QAAA,IAAI,EAAG,IAAGD,UAAU,CAACE,EAAG,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkCD,eAAe,EAAjD;AAFmB,KAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF;AAAA;AAAA;AAAA,8gFADF;AAyBD,CAvCD;;AAyCA,eAAeT,UAAf","sourcesContent":["import React from \"react\";\nimport { NotionRenderer, BlockMapType } from \"react-notion\";\nimport Head from \"next/head\";\nimport Link from \"next/link\";\nimport fetch from \"node-fetch\";\n\nexport async function getServerSideProps(context) {\n  const pageId = context.params?.pageId;\n\n  if (!pageId) {\n    return;\n  }\n\n  const data: BlockMapType = await fetch(\n    `https://notion-api.splitbee.io/v1/page/${pageId}`\n  ).then(res => res.json());\n\n  return {\n    props: {\n      blockMap: data\n    }\n  };\n}\n\nconst NotionPage = ({ blockMap }) => {\n  if (!blockMap || Object.keys(blockMap).length === 0) {\n    return (\n      <div>\n        <h3>No data found.</h3>\n        <div> Make sure the pageId is valid.</div>\n        <div>Only public pages are supported in this example.</div>\n      </div>\n    );\n  }\n\n  const title =\n    blockMap[Object.keys(blockMap)[0]]?.value.properties.title[0][0];\n\n  return (\n    <>\n      <Head>\n        <title>{title}</title>\n      </Head>\n      <NotionRenderer\n        blockMap={blockMap}\n        fullPage\n        customBlockComponents={{\n          page: ({ blockValue, renderComponent }) => (\n            <Link href={`/${blockValue.id}`}>{renderComponent()}</Link>\n          )\n        }}\n      />\n      <style jsx global>{`\n        div :global(.notion-code) {\n          box-sizing: border-box;\n        }\n        body {\n          padding: 0;\n          margin: 0;\n        }\n      `}</style>\n    </>\n  );\n};\n\nexport default NotionPage;\n"]},"metadata":{},"sourceType":"module"}